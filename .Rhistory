calr7 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][19:21,
]
calr8 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][22:24,
]
rstudio::viewData(calr2)
rstudio::viewData(calr2)
e <- calData(calr1)
f <- calData(calr2)
g <- calData(calr3)
h <- calData(calr4)
i <- calData(calr5)
j <- calData(calr6)
k <- calData(calr7)
l <- calData(calr8)
fix(l)
m <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = e, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(1:4, 33:35), ]
n <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = f, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(5:8, 36:38), ]
o <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = g, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(9:12, 39:41), ]
p <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = h, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(13:16, 42:44), ]
q <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = i, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(17:20, 45:47), ]
r <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = j, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(21:24, 48:50), ]
s <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = k, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(25:28, 51:53), ]
t <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = l, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(29:32, 54:56), ]
u <- rbind(m, n, o, p, q, r, s, t)
rstudio::viewData(u)
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25), ]
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
ctlgeom1 <- (as.data.frame(ctlgeom)[rep(1:(ncol(u)), each = nrow(u)), ])
ctlgeom2 <- as.data.frame(matrix(ctlgeom1, ncol = ncol(u), byrow = FALSE))
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
library("matrixStats", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
ctlgeom1 <- (as.data.frame(ctlgeom)[rep(1:(ncol(u)), each = nrow(u)), ])
ctlgeom2 <- as.data.frame(matrix(ctlgeom1, ncol = ncol(u), byrow = FALSE))
CNRQs_scaled_to_group <- u/ctlgeom2
plot(CNRQs_scaled_to_group_scaled_to_group)
rstudio::viewData(CNRQs_scaled_to_group)
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25)]
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25)]
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25), ]
ctlgroup
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
ctlgeom1 <- (as.data.frame(ctlgeom)[rep(1:(ncol(u)), each = nrow(u)), ])
ctlgeom2 <- as.data.frame(matrix(ctlgeom1, ncol = ncol(u), byrow = FALSE))
CNRQs_scaled_to_group <- u/ctlgeom2
fix(ctlgeom)
rstudio::viewData(ctlgeom2)
rstudio::viewData(CNRQs_scaled_to_group)
plot(CNRQs_scaled_to_group[2:4])
barplot(CNRQs_scaled_to_group$RG1, names = row.names)
barplot(CNRQs_scaled_to_group$RG1, names = row.names)
barchart(RG1 $sim$ row.names)
library("lattice", lib.loc="/usr/lib/R/library")
barchart(RG1 $sim$ row.names)
barchart(RG1 $sim$ row.names, data = CNRQs_scaled_to_group)
ggplot
ggplot()
barchart()
for ( i in seq(1,length( data ),1) ) plot(data[,i],ylab=names(data[i]),type="l")
require(ggplot2)
plot.ts(CNRQs_scaled_to_group)
?plot.ts
barplot(CNRQs_scaled_to_group, beside=T)
barplot(CNRQs_scaled_to_group(2:4), beside=T)
?barplot
barplot(CNRQs_scaled_to_group("RG1")
barplot(CNRQs_scaled_to_group("RG1"))
barplot(CNRQs_scaled_to_group["RG1"])
plot(CNRQs_scaled_to_group[2])
plot(CNRQs_scaled_to_group[2,4])
plot(CNRQs_scaled_to_group[c(2-4)])
barplot(CNRQs_scaled_to_group[2])
barplot(t(d[-1]), names.arg=d[,1], beside=TRUE)
barplot(t(CNRQs_scaled_to_group[-1]), names.arg=CNRQs_scaled_to_group[,1], beside=TRUE)
barplot(t(CNRQs_scaled_to_group[-1]), beside=TRUE)
barplot(t(CNRQs_scaled_to_group), beside=TRUE)
ggplot(data=CNRQs_scaled_to_group, aes(x=row.names, y=RG1)) + geom_bar(stat="identity")
library("EasyqpcR", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("gWidgets", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("gWidgetsRGtk2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("matrixStats", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("qpcR", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("RGtk2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
install.packages("ggplot2")
library("ggplot2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ggplot(data=CNRQs_scaled_to_group, aes(x=row.names, y=RG1)) + geom_bar(stat="identity")
CNRQs_scaled_to_group
df <- data.frame(time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23))
rstudio::viewData(df)
ggplot(data=df, aes(x=time, y=total_bill)) + geom_bar(stat="identity")
ggplot(data=df, aes(x=time, y=total_bill, fill=time)) + geom_bar(stat="identity")
geom_bar()
ggplot()
?ggplot
ggplot(data=df, aes(x=time, y=total_bill, fill=time)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE)
ggplot(data=df, aes(x=time, y=total_bill, fill=time)) +
geom_bar(colour="black", fill="#DD8888", width=.7, stat="identity") +
guides(fill=FALSE) +
xlab("Time of day") + ylab("Total bill") +
ggtitle("Average bill for 2 people")
data(qPCR_run1, qPCR_run2, qPCR_run3)
?data
str(c(qPCR_run1, qPCR_run2, qPCR_run3))
?str
?c
aa <- nrmData(data = qPCR_run1, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = c(1, 1,
1, 1), CalPos = 5, trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]]
bb <- nrmData(data = qPCR_run2, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = c(1, 1,
1, 1), CalPos = 5, trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]]
cc <- nrmData(data = qPCR_run3, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = c(1, 1,
1, 1), CalPos = 5, trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]]
rstudio::viewData(aa)
e <- calData(aa)
f <- calData(bb)
g <- calData(cc)
fix(e)
rstudio::viewData(aa)
fix(e)
nrmData(data = qPCR_run1, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02, 0.02,
0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = e, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)
nrmData(data = qPCR_run2, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02, 0.02,
0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = f, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)
nrmData(data = qPCR_run3, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02, 0.02,
0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = g, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)
a1 <- nrmData(data = qPCR_run1, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = e, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)[1]
fix(`a1`)
b1 <- nrmData(data = qPCR_run2, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = f, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)[1]
## Isolate the NRQs scaled to control of the third biological replicate
c1 <- nrmData(data = qPCR_run3, r = 3, E = c(2, 2, 2, 2), Eerror = c(0.02, 0.02,
0.02, 0.02), nSpl = 5, nbRef = 2, Refposcol = 1:2, nCTL = 2, CF = g, CalPos = 5,
trace = FALSE, geo = TRUE, na.rm = TRUE)[1]
## Data frame transformation
a2 <- as.data.frame(a1)
b2 <- as.data.frame(b1)
c2 <- as.data.frame(c1)
## Aggregation of the three biological replicates
d2 <- rbind(a2, b2, c2)
rstudio::viewData(`d2`)
totData(data = d2, r = 3, geo = TRUE, logarithm = TRUE, base = 2, transformation = TRUE,
nSpl = 5, linear = TRUE, na.rm = TRUE)
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
Gene_maximisation <- read.table(ﬁlebis, header = TRUE, sep = ";", dec = ",")
library("reshape2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
Gene_maximisation <- read.table(ﬁlebis, header = TRUE, sep = ";", dec = ",")
library("BiocInstaller", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
Gene_maximisation <- read.table(ﬁlebis, header = TRUE, sep = ";", dec = ",")
library("gtable", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
Gene_maximisation <- read.table(ﬁlebis, header = TRUE, sep = ";", dec = ",")
library("lattice", lib.loc="/usr/lib/R/library")
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
Gene_maximisation <- read.table(ﬁlebis, header = TRUE, sep = ";", dec = ",")
library("EasyqpcR", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("gWidgets", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("gWidgetsRGtk2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("qpcR", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
system.file()
filebis()
data(Gene_maximisation.csv)
data(qPCR_run1, qPCR_run2, qPCR_run3)
data(Gene_maximisation.csv)
ﬁlebis <- system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
system.ﬁle("extdata", "Gene_maximisation.csv", package = "EasyqpcR")
system.file(package = "stats")
system.file(package = "EasyqpcR")
Gene_maximisation <- read.table(/home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation.csv, header = TRUE, sep = ";", dec = ",")
Gene_maximisation <- read.table(home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation.csv, header = TRUE, sep = ";", dec = ",")
Gene_maximisation <- read.table("home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation.csv", header = TRUE, sep = ";", dec = ",")
Gene_maximisation <- read.table("/home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation.csv", header = TRUE, sep = ";", dec = ",")
rstudio::viewData(Gene_maximisation)
ﬁleter <- system.ﬁle("extdata", "Gene_maximisation_cor.csv", package = "EasyqpcR")
system.ﬁle("extdata", "Gene_maximisation_cor.csv", package = "EasyqpcR")
Gene_maximisation <- read.table("/home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation_cor.csv", header = TRUE, sep = ";", dec = ",")
Gene_maximisation_cor <- read.table("/home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation_cor.csv", header = TRUE, sep = ";", dec = ",")
calr1 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][1:3,
]
Gene_maximisation_cor <- read.table("/home/tim/R/x86_64-pc-linux-gnu-library/2.15/EasyqpcR/extdata/Gene_maximisation_cor.csv", header = TRUE, sep = ";", dec = ",")
Gene_maximisation_cor1 <- Gene_maximisation_cor[-c(106:108, 118:120, 130:132,
142:144, 154:156, 166:168, 178:180, 190:192), ]
rownames(Gene_maximisation_cor1) <- c(1:168)
rstudio::viewData(Gene_maximisation_cor1)
calr1 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][1:3,
]
calr2 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][4:6,
]
calr3 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][7:9,
]
calr4 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][10:12,
]
calr5 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][13:15,
]
calr6 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][16:18,
]
calr7 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][19:21,
]
calr8 <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = c(1,
1, 1), CalPos = c(33:56), trace = FALSE, geo = TRUE, na.rm = TRUE)[[3]][22:24,
]
e <- calData(calr1)
f <- calData(calr2)
g <- calData(calr3)
h <- calData(calr4)
i <- calData(calr5)
j <- calData(calr6)
k <- calData(calr7)
l <- calData(calr8)
m <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = e, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(1:4, 33:35), ]
n <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = f, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(5:8, 36:38), ]
o <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = g, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(9:12, 39:41), ]
p <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = h, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(13:16, 42:44), ]
q <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = i, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(17:20, 45:47), ]
r <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = j, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(21:24, 48:50), ]
s <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = k, CalPos = c(33:35),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(25:28, 51:53), ]
t <- nrmData(data = Gene_maximisation_cor1, r = 3, E = c(2, 2, 2), Eerror = c(0.02,
0.02, 0.02), nSpl = 56, nbRef = 2, Refposcol = 1:2, nCTL = 16, CF = l, CalPos = c(36:56),
trace = FALSE, geo = TRUE, na.rm = TRUE)[[2]][c(29:32, 54:56), ]
## Aggregation of all the CNRQs
u <- rbind(m, n, o, p, q, r, s, t)
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25), ]
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
ctlgeom1 <- (as.data.frame(ctlgeom)[rep(1:(ncol(u)), each = nrow(u)), ])
ctlgeom2 <- as.data.frame(matrix(ctlgeom1, ncol = ncol(u), byrow = FALSE))
CNRQs_scaled_to_group <- u/ctlgeom2
library("matrixStats", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ctlgroup <- u[c(1:4, 8:11, 15:18, 22:25), ]
ctlgeom <- colProds(ctlgroup)^(1/dim(ctlgroup)[1])
ctlgeom1 <- (as.data.frame(ctlgeom)[rep(1:(ncol(u)), each = nrow(u)), ])
ctlgeom2 <- as.data.frame(matrix(ctlgeom1, ncol = ncol(u), byrow = FALSE))
CNRQs_scaled_to_group <- u/ctlgeom2
rstudio::viewData(CNRQs_scaled_to_group)
library("ggplot2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
ggplot(data=CNRQs_scaled_to_group, aes(x=row.names, y=RG1)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group, aes(y=RG1)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group, aes(x=1, y=RG1)) + geom_bar(stat="identity")
CNRQs_scaled_to_group
ggplot(data=CNRQs_scaled_to_group, aes(x=names, y=RG1)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group, aes(x, y=RG1)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group, aes(row.names, y=RG1)) + geom_bar(stat="identity")
library("reshape2", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
melt(CNRQs_scaled_to_group)
rstudio::viewData(CNRQs_scaled_to_group)
CNRQs_scaled_to_group
row.names
CNRQs_scaled_to_group$X=row.names(CNRQs_scaled_to_group)
ggplot(data=CNRQs_scaled_to_group, aes(x=, y=RG1)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group, aes(x=X, y=RG1)) + geom_bar(stat="identity")
CNRQs_scaled_to_group
ggplot(data=CNRQs_scaled_to_group, aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
?nmrData
?nrmData
rstudio::viewData(u)
ggplot(data=CNRQs_scaled_to_group[1:7}], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[1:7], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[1:7,], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[8:17,], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[8:14,], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[15:21,], aes(x=X, y=RG1, fill=X)) + geom_bar(stat="identity")
library("plotrix", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
library("plyr", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/2.15")
citation("EasyqpcR")
ggplot(data=CNRQs_scaled_to_group[1:7,], aes(x=X, y=TG, fill=X)) + geom_bar(stat="identity")
ggplot(data=CNRQs_scaled_to_group[1:7,], aes(x=X, y=TG, fill=X)) + geom_bar(stat="identity", position=position_dodge())
CNRQs_scaled_to_group
melt(CNRQs_scaled_to_group, id.vars=c("X"))
ggplot(data=CNRQs_scaled_to_group[1:7,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
CNRQs_scaled_to_group
CNRQs_scaled_to_group_long <- melt(CNRQs_scaled_to_group, id.vars=c("X"))
ggplot(data=CNRQs_scaled_to_group_long[1:7,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[1:40,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
rstudio::viewData(CNRQs_scaled_to_group_long)
ggplot(data=CNRQs_scaled_to_group_long, aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[1:4, 57:60,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[(1:4), (57:60),], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[[1:4], [57:60],], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[[1:4,], [57:60,]], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[[1:4,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CNRQs_scaled_to_group_long[1:4,], aes(x=X, y=value, fill=variable)) + geom_bar(stat="identity", position=position_dodge())
c()
?c
source("http://bioconductor.org/biocLite.R")
old.packages(repos=biocinstallRepos())
source("http://bioconductor.org/biocLite.R")
biocLite(character(), ask=FALSE)
install.packages(c("colorspace", "digest", "ggplot2", "minpack.lm", "plotrix", "qpcR", "rgl", "robustbase"))
install.packages(c("gtools", "matrixStats", "munsell", "plotrix", "rgl", "robustbase"))
install.packages(c("colorspace", "digest", "gtools", "gWidgetsRGtk2", "matrixStats", "minpack.lm", "plotrix", "rgl", "R.methodsS3", "robustbase"))
library("BiocInstaller", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/3.0")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("beadarray", "lumi", "limma", "arrayQualityMetrics", "lumiMouseIDMapping", "illuminaMousev1p1.db"))
biocLite (c( "" GEOquery " , " illuminaMousev1 . db " ," illuminaMousev2 . db " , " BeadArrayUseCases " ))
biocLite (c( " GEOquery " , " illuminaMousev1 . db " ," illuminaMousev2 . db " , " BeadArrayUseCases " ))
which R
whcih
which
which (R)
biocLite(c("illuminaMousev1.db"))
biocLite(c("illuminaMousev2.db"))
biocLite(c("GEOquery"))
biocLite('RCurl')
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade"
biocLite("BiocUpgrade")
biocLite(c("GEOquery"))
source("http://bioconductor.org/biocLite.R")
biocLite('RCurl')
biocLite(c("GEOquery"))
biocLite(c("GEOquery"))
biocLite()
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GEOquery"))
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("DEoptimR")
source("http://bioconductor.org/biocLite.R")
biocLite()
library("limma", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/3.0")
remove.packages("limma")
biocLite(limma)
biocLite("limma")
limmaUsersGuide(view=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite()
library("limma", lib.loc="/home/tim/R/x86_64-pc-linux-gnu-library/3.0")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("BiocUpgrade")
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("Rserve")
install.packages(c("itertools", "plotrix", "Rcpp"))
~
fieChoose()
fileChoose()
fileChoose()
traceback()
fileChoose()
?function
?nncross
fileChoose <- function(action="setwd", type="selectdir", text="Select a directory...",
type="open", ...) {
gfile(text=text, type=type, ..., action = action, handler = function(h,...) {
do.call(h$action, list(h$file))})
fileChoose <- function(action="setwd", type="selectdir", text="Select a directory...",
type="open", ...) {
gfile(text=text, type=type, ..., action = action, handler = function(h,...) {
do.call(h$action, list(h$file))})
}
install.packages(c("BatchJobs", "checkmate", "Formula", "GGally", "gWidgets", "mvtnorm", "nleqslv", "SparseM"))
library("BiocInstaller", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
biocLite()
library(datasets)
data(iris)
?iris
head(iris)
mean(iris$Septal.Length)
mean(iris[[1]])
?split
tapply(iris[[1]], iris[[5]], mean)
colMeans(iris)
?apply
apply(iris[, 1:4], 2, mean)
s <- apply(iris[, 1:4], 2, mean)
type(s)
class(s)
s
library(datasets)
data(mtcars)
class(mtcars)
?mtcars
head(mtcars)
?apply
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl,mean)
tapply(mtcars$hp, mtcars$cyl,mean)
209.21429 - 82.66364
hp = tapply(mtcars$hp, mtcars$cyl,mean)
hp(1)
hp[1]
hp[3] - hp[1]
debug(ls)
ls()
setwd("~/Repos/ProgrammingAssignment2")
? matrix
t <- matrix(c(1,2,3,3,4,5,11,12,13), nrow = 3, ncol = 3)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
## define function to set matrix
set2 <- function(y) {
x <<- y
i <<- NULL
}
## define function to return input matrix
get2 <- function() x
## define function to invert input matrix with solve() as variable i passed outwith environment
set_inverse <- function(solve) i <<- solve
## define function to simply return inverted input matrix
get_inverse <- function() i
## place the 4 defined functions as self-named list elements
list(set2=set2, get2=get2, set_inverse=set_inverse, get_inverse=get_inverse)
}
cacheSolve <- function(x, ...) {
## attempt to get inverted cached matrix
i <- x$get_inverse()
## if cached matrix identified it is retrieved and returned
if(!is.null(i)) {
message("getting cached inverse")
return(i)
}
## otherwise inputted matrix retrieved
mat <- x$get2()
## and inverted
i <- solve(mat)
## set
x$set_inverse(i)
## and returned
i
}
makeCacheMatrix(t)
test <- makeCacheMatrix(t)
cacheSolve(test)
t <- matrix(c(1,0,5,2,1,6,3,4,0), nrow = 3, ncol = 3)
makeCacheMatrix(t)
test <- makeCacheMatrix(t)
cacheSolve(test)
cacheSolve(test)
